основы питона

обозначения
	"-": повествование
	"?": вопрос 

# эффект зейгарник
# подкрепление примерами из жизни
# проверка понимания через формулирование учеником собственных примеров
# стоит удостовериваться в том, что ученик все понимает
# шутки за 3e+2 каждые 2e1 минут
# внезапный выход вне контекста ради привлечения внимания
# само-цитирование
# self-references
# обучение терминологии:
	вводится термин X
	объясняется
	далее термин X вводится в лексикон
	далее - а вы/ты помните что такое X?
# summary после каждого большого раздела: "повторим главные моменты", выжимка
# позитивные подкрепления -- охуенная тема
# негативные подкрепления -- если хочешь сделать занятия неэффективными
# lesson as game
# допустим:
	в начале урока берём список новых терминов
	по ходу урока объясняем
	ученик зачеркивает понятые им термины
	в конце урока подводим итоги с пряником:
		"поздравляю, сегодня твой айти-лексикон пополнился на N новых слов" 


# task types:
	find error(s)
	fix error(s)
	understand expr with new words

# что может быть в домашнем задании:
	статьи/etc для обсуждения в начале следующего занятия и/или расширения кругозора





# оптимальная периодичность занятий -  [2, 4] в неделю


- Что такое python и зачем он нужен
- Особенности python
- Установка pyenv и python
- Установка текстового редактора/ide (например, sublime text/pycharm)
- Основные типы данных (строки, числа, Bool, None) и способы их записи
- Переменные
- if-then-else и прочие варианты ветвления
- Функции
- Составные типы данных: кортеж, список, словарь
- Классы и ООП
- Модули
- ??? что дальше, не знаю



наглядные примеры:
	- private/public keypair as ключи от квартиры и местоположение квартиры


# ОБЯЗАТЕЛЬНЫЕ ХУЙНИ:
	надо пояснять ученикам за метод утёнка
	git?
	как находить в гугле то, что нужно = как формулировать корректные вопросы
	google "hidden" features:
		site:example.com
		-dontsearch
		filetype:txt
		"exact string"
	ссылки на
		habr.com - платина
		stackoverflow.com - вдвойне платина
		сайты с курсами - давать на последнем занятии - coursera stepik etc
		сайты с задачками по кодингу в виде челленжей: codewars


рекомендуемые хуйни:
	мечта о приложении
	мечта о решенной задаче
	т.е. ЦЕЛЬ 

дидактические принципы:
	наглядность - максимум раздражения на все типы раздражителей
	доступность - ученик должен быть способен усвоить материал/либо ему придется повершить дополнительные "гугления" для этого, но без перегружения
	научность - все что я рассказываю должно быть истинным и проверяемым
	последовательность - материал по цепочке; от простого к сложному; переходы должны быть понятны


расстояние одного понятийного шага или зона ближайшего
